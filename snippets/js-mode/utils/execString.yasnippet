# -*- mode: snippet -*-
# key: execString
# name: execString()
# group: Utility functions
# atom-selector: .source.js, .source.ts, .source.tsx
# --
/**
 * Execute a string as an unescaped shell command.
 *
 * @public
 * @example <caption>Shell-like invocation with tagged templates</caption>
 *    import {execString as $} from "./utils.js";
 *    const checksums = await $ \`git log --oneline | cut -d' ' -f1\`;
 *    const forty     = await $ \`printf %s "${checksums}" | wc -l\`;
 *
 * @param {String} input
 *    Source of the command(s) to execute.
 *
 * @return {Promise}
 *    Resolves with the command's standard output.
 */
async function execString(input, ...values){
	input = Array.isArray(input) && Array.isArray(input.raw)
		? input.raw.map((string, index) => string + (values[index] || "")).join("")
		: [input, ...values].join(" ");
	return new Promise((resolve, reject) => {
		require("child_process").exec(input, (error, stdout, stderr) => error
			? reject(Object.assign(error, {stdout, stderr}))
			: resolve(stdout));
	});
}