# -*- mode: snippet -*-
# key: abbrpath
# name: Path-shortening utility function
# atom-selector: .source.makefile
# --
# Abbreviate a pathname by replacing $HOME with "~" and $PWD with "."
abbrpath = \$(abbrpath__fn); abbrpath
abbrpath__fn = \\
	abbrpath(){ \\
		while [ ! "\$\$1" = "\$\${1%/}"   ]; do set -- "\$\${1%/}"; done; \\
		while [ ! "\$\$1" = "\$\${1%//*}" ]; do \\
			set -- "\$\$1" "\$\${1%//*}" "\$\${1\\#\\#*//}"; \\
			set -- "\$\$2/\$\$3"; \\
		done; \\
		while :; do case \$\$1 in \\
			'')             printf /;; \\
			~|~/)           printf '~';; \\
			"\$\$PWD"|"\$\$PWD"/) printf .;; \\
			"\$\$PWD"/?*|~/?*) break;; \\
			*)              printf %s "\$\$1";; \\
		esac; return; done; \\
		set -- "\$\$1" ~ "\$\$PWD"; \\
		set -- "\$\$1" "\$\${1\\#"\$\$2"}" "\$\${1\\#"\$\$3"}"; \\
		set -- "\$\$1" "~/\$\${2\\#/}"  "./\$\${3\\#/}"; \\
		if   [ "\$\${\\#2}" -le "\$\${\\#3}" ] && [ "\$\${\\#2}" -lt "\$\${\\#1}" ]; then set -- "\$\$2"; \\
		elif [ "\$\${\\#3}" -le "\$\${\\#2}" ] && [ "\$\${\\#3}" -lt "\$\${\\#1}" ]; then set -- "\$\$3"; \\
		else set -- "\$\$1"; fi; \\
		printf %s "\$\$1"; \\
	}
$0